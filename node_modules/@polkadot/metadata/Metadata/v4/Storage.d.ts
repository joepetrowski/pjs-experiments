import { DoubleMapTypeV4, MapTypeV4, PlainTypeV4, StorageFunctionModifierV4 } from '@polkadot/types/interfaces/metadata';
import { AnyNumber } from '@polkadot/types/types';
import Enum from '@polkadot/types/codec/Enum';
import Struct from '@polkadot/types/codec/Struct';
import Vec from '@polkadot/types/codec/Vec';
import Bytes from '@polkadot/types/primitive/Bytes';
import Text from '@polkadot/types/primitive/Text';
export declare class StorageFunctionType extends Enum {
    constructor(value?: any, index?: number);
    /**
     * @description The value as a mapped value
     */
    get asDoubleMap(): DoubleMapTypeV4;
    /**
     * @description The value as a mapped value
     */
    get asMap(): MapTypeV4;
    /**
     * @description The value as a [[Type]] value
     */
    get asType(): PlainTypeV4;
    /**
     * @description `true` if the storage entry is a doublemap
     */
    get isDoubleMap(): boolean;
    /**
     * @description `true` if the storage entry is a map
     */
    get isMap(): boolean;
    /**
     * @description `true` if the storage entry is a plain type
     */
    get isPlainType(): boolean;
    /**
     * @description Returns the string representation of the value
     */
    toString(): string;
}
export interface StorageFunctionMetadataValue {
    name: string | Text;
    modifier: StorageFunctionModifierV4 | AnyNumber;
    type: StorageFunctionType;
    fallback: Bytes;
    documentation: Vec<Text> | string[];
}
/**
 * @name StorageFunctionMetadata
 * @description
 * The definition of a storage function
 */
export declare class StorageFunctionMetadata extends Struct {
    constructor(value?: StorageFunctionMetadataValue | Uint8Array);
    /**
     * @description The default value of the storage function
     */
    get fallback(): Bytes;
    /**
     * @description The [[Text]] documentation
     */
    get documentation(): Vec<Text>;
    /**
     * @description The key name
     */
    get name(): Text;
    /**
     * @description The modifier
     */
    get modifier(): StorageFunctionModifierV4;
    /**
     * @description The [[StorageFunctionType]]
     */
    get type(): StorageFunctionType;
}
