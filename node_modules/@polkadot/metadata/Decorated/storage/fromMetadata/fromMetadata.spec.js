"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@polkadot/types/injector");

var _testingPairs = _interopRequireDefault(require("@polkadot/keyring/testingPairs"));

var _util = require("@polkadot/util");

var _static = _interopRequireDefault(require("../../../Metadata/static"));

var _Decorated = _interopRequireDefault(require("../../Decorated"));

// Copyright 2017-2019 @polkadot/metadata authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
const keyring = (0, _testingPairs.default)({
  type: 'ed25519'
});
const decorated = new _Decorated.default(_static.default);
describe('fromMetadata', () => {
  it('should throw if the storage function expects an argument', () => {
    expect(() => decorated.query.balances.freeBalance()).toThrowError(/requires one argument/);
  });
  it('should return a value if the storage function does not expect an argument', () => {
    expect(() => decorated.query.timestamp.now()).not.toThrow();
  });
  it('should return the correct length-prefixed storage key', () => {
    expect((0, _util.u8aToHex)(decorated.query.balances.freeBalance(keyring.alice.address))).toEqual('0x807f864e18e3dd8b58386310d2fe0919eef27c6e558564b7f67f22d99d20f587bb');
  });
});